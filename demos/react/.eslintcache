[{"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/index.js":"1","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/App.js":"2","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/index.jsx":"3","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/VirtualList/index.jsx":"4","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/hooks.js":"5","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/fetchPhoto.js":"6","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/VirtualList/data.js":"7","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/data.js":"8","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/CompoundComponent/index.jsx":"9","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/switch.js":"10","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/PropsCollection/index.jsx":"11","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/StateReducer/index.jsx":"12","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/ControlProps/index.jsx":"13","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/RenderProps/index.js":"14","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/RenderProps/data.js":"15"},{"size":256,"mtime":1625710080968,"results":"16","hashOfConfig":"17"},{"size":1652,"mtime":1645341631517,"results":"18","hashOfConfig":"17"},{"size":8634,"mtime":1635230649135,"results":"19","hashOfConfig":"17"},{"size":1864,"mtime":1625710080967,"results":"20","hashOfConfig":"17"},{"size":1286,"mtime":1630196219997,"results":"21","hashOfConfig":"17"},{"size":473,"mtime":1625710080958,"results":"22","hashOfConfig":"17"},{"size":3620,"mtime":1625710080966,"results":"23","hashOfConfig":"17"},{"size":5540,"mtime":1625710080957,"results":"24","hashOfConfig":"17"},{"size":1425,"mtime":1633907398875,"results":"25","hashOfConfig":"17"},{"size":815,"mtime":1633907403633,"results":"26","hashOfConfig":"17"},{"size":906,"mtime":1633907401434,"results":"27","hashOfConfig":"17"},{"size":2420,"mtime":1633907396526,"results":"28","hashOfConfig":"17"},{"size":3416,"mtime":1635233125598,"results":"29","hashOfConfig":"17"},{"size":1692,"mtime":1625710080964,"results":"30","hashOfConfig":"17"},{"size":1105,"mtime":1625710080964,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1khx3lu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/index.js",[],["69","70"],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/App.js",["71"],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/index.jsx",["72","73","74","75","76","77"],"// 瀑布流布局\nimport { useState, useEffect, useRef } from \"react\";\nimport { partial } from \"lodash\";\nimport Masonry from \"react-masonry-css\";\nimport { useModalSize } from \"./hooks\";\n// import Masonry from \"./masonry.js\";\nimport { Button, Modal, Input, Checkbox, Skeleton } from \"antd\";\nimport ReactLoading from \"react-loading\";\nimport { useThrottleFn, useKeyPress } from \"ahooks\";\nimport fetchPhotos from \"./fetchPhoto\";\nimport \"./index.less\";\n\nconst HALF_SCREEN = document.body.clientHeight / 2;\nconst DEFAULT_SEARCH_KEYWORD = \"cat\";\nconst COLUMN_COUNT = 6;\n\nfunction MasonryDemo() {\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  // data, error, loading\n  const [photos, setPhotos] = useState([]);\n  const [error, setError] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [pageObj, setPageObj] = useState({\n    page: 1,\n    totalPage: 10,\n  });\n\n  //ref\n  const inputRef = useRef();\n  const masonryRef = useRef();\n  const modalRef = useRef(document.querySelector(\".masonry-modal\"));\n\n  // modal\n  const { modalWidth, modalHeight } = useModalSize();\n\n  const [visible, setVisible] = useState(false);\n  const [checkedIndexes, setCheckedIndexes] = useState([]);\n  const [focusedIndex, setFocusIndex] = useState(-1);\n  const [loadedIndexes, setLoadedIndexes] = useState([]);\n\n  const triggerSearch = () => {\n    setPhotos([]);\n    console.log(\"searching: \", searchKey);\n    getData({\n      ...pageObj,\n      ...{ key: searchKey, page: 1 },\n    });\n  };\n\n  useEffect(() => {\n    console.log(\n      \"document.body.clientHeight, document.body.clientWidth\",\n      document.body.clientHeight,\n      document.body.clientWidth\n    );\n  });\n\n  // 滚动的时候更改元素选中, 默认为第一个\n  useKeyPress(\"ArrowUp\", () => {\n    if (focusedIndex == 0) return;\n    if (focusedIndex < COLUMN_COUNT) {\n      setFocusIndex(0);\n    } else {\n      setFocusIndex(focusedIndex - COLUMN_COUNT);\n    }\n  });\n  useKeyPress(\"ArrowDown\", () => {\n    setFocusIndex(focusedIndex + COLUMN_COUNT);\n  });\n  useKeyPress(\"ArrowLeft\", () => {\n    setFocusIndex(focusedIndex - 1);\n  });\n  useKeyPress(\"ArrowRight\", () => {\n    setFocusIndex(focusedIndex + 1);\n  });\n\n  useKeyPress(\"Enter\", () => {\n    console.log(\"document.activeElement\", document.activeElement);\n    console.log(\"inputRef.current\", inputRef.current);\n    console.log(\"masonryRef.current\", masonryRef.current);\n    if (document.activeElement === inputRef.current.input) {\n      inputRef.current.input.blur();\n      masonryRef.current.focus();\n      triggerSearch();\n      setTimeout(() => {\n        console.log(\"document.activeElement\", document.activeElement);\n      }, 1000);\n    } else {\n      check(focusedIndex);\n    }\n  });\n\n  const loadImageSize = (imageList = []) => {\n    if (!imageList.length) return;\n    return new Promise((resolve, reject) => {\n      const length = imageList.length;\n      let count = 0;\n      const load = (index) => {\n        let imgEle = new Image();\n        const checkIfFinished = () => {\n          count++;\n          if (count === length) {\n            resolve(imageList);\n          }\n        };\n        imgEle.onload = () => {\n          imageList[index] = {\n            ...imageList[index],\n            originHeight: imgEle.height,\n            originWidth: imgEle.width,\n          };\n          checkIfFinished();\n        };\n        imgEle.onerror = () => {\n          // heights[index] = 0;\n          checkIfFinished();\n        };\n        imgEle.src = imageList[index].currentSrc;\n      };\n      imageList.forEach((img, index) => load(index));\n    });\n  };\n\n  // 预设关键字搜索\n  useEffect(() => {\n    setSearchKey(DEFAULT_SEARCH_KEYWORD);\n    triggerSearch();\n  }, [visible]);\n\n  const hasReachedBottom = () => {\n    let element = masonryRef.current;\n    return (\n      element.scrollHeight -\n        Math.abs(element.scrollTop) -\n        element.clientHeight <\n      HALF_SCREEN\n    );\n  };\n\n  const loadMore = () => {\n    if (hasReachedBottom()) {\n      if (pageObj.page === pageObj.totalPage) return;\n      getData({ ...pageObj, key: searchKey, page: pageObj.page + 1 });\n    }\n  };\n\n  const { run: handleScroll, cancel } = useThrottleFn(\n    () => {\n      loadMore();\n    },\n    {\n      waiting: 300,\n    }\n  );\n\n  const getData = (payload) => {\n    console.log(\"payload\", payload);\n    // loading\n    if (loading) return;\n    setLoading(true);\n    fetchPhotos(payload)\n      .then((newPhotos) => {\n        // 处理pageObj\n        setPageObj({\n          ...pageObj,\n          page: pageObj.page + 1,\n          key: searchKey,\n        });\n        if (pageObj.page === 1) {\n          inputRef.current.blur();\n          masonryRef.current.focus();\n          setFocusIndex(0);\n\n          loadImageSize(newPhotos).then((newPhotosWithSize) => {\n            setPhotos(newPhotosWithSize);\n            // console.log(\"newPhotosWithSize\", newPhotosWithSize);\n          });\n        } else {\n          loadImageSize(newPhotos).then((newPhotosWithSize) => {\n            setPhotos([...photos, ...newPhotosWithSize]);\n            // console.log(\"newPhotosWithSize\", newPhotosWithSize);\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleCheck = (index, e) => {\n    // 聚焦\n    setFocusIndex(index);\n    // 选中\n    check(index);\n  };\n\n  const check = (index) => {\n    let findIndex = checkedIndexes.indexOf(index);\n    if (findIndex === -1) {\n      checkedIndexes.push(index);\n      setCheckedIndexes([...checkedIndexes]);\n    } else {\n      checkedIndexes.splice(findIndex, 1);\n      setCheckedIndexes([...checkedIndexes]);\n    }\n  };\n  const handleImgLoad = (index, e) => {\n    if (!loadedIndexes.includes(index)) {\n      setLoadedIndexes([...loadedIndexes, index]);\n    }\n  };\n\n  const renderSkeleton = () => {\n    return <Skeleton />;\n  };\n\n  const renderNoMore = () => {\n    return <div>no more data...</div>;\n  };\n\n  const handleInput = (e) => {\n    setSearchKey(e.target.value);\n  };\n\n  const renderMasonry = () => {\n    return (\n      <div\n        className=\"masonry-container\"\n        onScroll={handleScroll}\n        ref={masonryRef}\n      >\n        <Masonry\n          breakpointCols={COLUMN_COUNT}\n          className=\"masonry-grid\"\n          columnClassName=\"masonry-grid_column\"\n        >\n          {photos.map((photo, index) => {\n            return (\n              <div\n                className=\"item-container\"\n                key={index}\n                tabIndex=\"-1\"\n                onClick={partial(handleCheck, index)}\n              >\n                <Checkbox\n                  checked={checkedIndexes.includes(index)}\n                  className=\"item-checkbox\"\n                ></Checkbox>\n                <div className=\"image-bg\" style={{ backgroudColor: \"#141646\" }}>\n                  <img\n                    src={photo.currentSrc || \"./images/placeholder.png\"}\n                    className={`img \n                      ${focusedIndex === index ? \"focus\" : \"\"} \n                      ${checkedIndexes.includes(index) ? \"checked\" : \"\"}\n                      ${loadedIndexes.includes(index) ? \"loaded\" : \"\"}\n                      `}\n                    onLoad={partial(handleImgLoad, index)}\n                  ></img>\n                </div>\n              </div>\n            );\n          })}\n        </Masonry>\n        <div className=\"loading-wrapper\">\n          <ReactLoading color=\"#000000\"></ReactLoading>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Button onClick={() => setVisible(!visible)}>showModal</Button>\n      <br></br>\n      <div className=\"masonry-wrapper\">\n        <Modal\n          title={`insert photos(${checkedIndexes.length})`}\n          visible={visible}\n          className=\"masonry-modal\"\n          id=\"masonry-modal\"\n          onOk={() => setVisible(!visible)}\n          width={modalWidth}\n          ref={modalRef}\n          style={{\n            border: \"1px solid gold\",\n            height: `${modalHeight}`,\n          }}\n          bodyStyle={{ padding: 0 }}\n        >\n          <>\n            <div className=\"input-wrapper\">\n              <Input\n                ref={inputRef}\n                placeholder=\"Basic usage\"\n                value={searchKey}\n                onChange={handleInput}\n              />\n              <Button onClick={triggerSearch}>Search</Button>\n            </div>\n            {pageObj.page === 1 ? renderSkeleton() : renderMasonry()}\n            {pageObj.page === pageObj.totalPage && renderNoMore()}\n          </>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default MasonryDemo;\n","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/VirtualList/index.jsx",["78"],"// 虚拟滚动列表demo, 原文见： https://zhuanlan.zhihu.com/p/34585166\nimport { useState, useEffect, useRef } from \"react\";\n\nimport \"./index.css\";\nimport data from \"./data\";\n\nexport default function Demo({ itemHeight = 30 }) {\n  const [visibleData, setVisibleData] = useState([]);\n  const container = useRef();\n  const content = useRef();\n\n  const updateVisibleData = (scrollTop) => {\n    scrollTop = scrollTop || 0;\n    const visibleCount = Math.ceil(container.current.clientHeight / itemHeight); // 取得可见区域的可见列表项数量\n    const start = Math.floor(scrollTop / itemHeight); // 取得可见区域的起始数据索引\n    const end = start + visibleCount; // 取得可见区域的结束数据索引\n    setVisibleData(data.slice(start, end)); // 计算出可见区域对应的数据，让 React 更新\n    content.current.style.webkitTransform = `translate3d(0, ${\n      start * itemHeight\n    }px, 0)`; // 把可见区域的 top 设置为起始元素在整个列表中的位置（使用 transform 是为了更好的性能）\n  };\n\n  useEffect(() => {\n    updateVisibleData();\n  }, []);\n\n  const handleScroll = () => {\n    const scrollTop = container.current.scrollTop;\n    updateVisibleData(scrollTop);\n  };\n\n  const contentHeight = data.length * itemHeight + \"px\";\n  return (\n    <>\n      <div class=\"list-view\" onScroll={handleScroll} ref={container}>\n        <div class=\"list-view-phantom\" style={{ height: contentHeight }}></div>\n        <div ref={content} class=\"list-view-content\">\n          {visibleData.map((item) => {\n            return (\n              <div\n                class=\"list-view-item\"\n                style={{\n                  height: itemHeight + \"px\",\n                }}\n              >\n                {item.value}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/hooks.js",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/fetchPhoto.js",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/VirtualList/data.js",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/Masonry/data.js",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/CompoundComponent/index.jsx",["79"],"import * as React from \"react\";\nimport { Switch } from \"../switch\";\n\nconst ToggleContext = React.createContext();\nToggleContext.displayName = \"ToggleContext\";\n\nfunction Toggle({ children }) {\n  const [on, setOn] = React.useState(false);\n  const toggle = () => setOn(!on);\n\n  return (\n    <ToggleContext.Provider value={{ on, toggle }}>\n      {children}\n    </ToggleContext.Provider>\n  );\n}\n\nfunction useToggle() {\n  const context = React.useContext(ToggleContext);\n  if (context === undefined) {\n    throw new Error(\"useToggle must be used within a <Toggle />\");\n  }\n  return context;\n}\n\nfunction ToggleOn({ children }) {\n  const { on } = useToggle();\n  return on ? children : null;\n}\n\nfunction ToggleOff({ children }) {\n  const { on } = useToggle();\n  return on ? null : children;\n}\n\nfunction ToggleButton({ ...props }) {\n  const { on, toggle } = useToggle();\n  return <Switch on={on} onClick={toggle} {...props} />;\n}\n\nfunction App() {\n  return (\n    <div>\n      <Toggle>\n        <ToggleOn>The button is on</ToggleOn>\n        <ToggleOff>The button is off</ToggleOff>\n        <div>\n          <ToggleButton />\n        </div>\n      </Toggle>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction MyCapitalizedInput() {\n  const [capitalizedValue, setCapitalizedValue] = React.useState(\"\");\n\n  return (\n    <input\n      value={capitalizedValue}\n      onChange={(e) => setCapitalizedValue(e.target.value.toUpperCase())}\n    />\n  );\n}\n","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/switch.js",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/PropsCollection/index.jsx",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/StateReducer/index.jsx",[],"/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/ControlProps/index.jsx",["80"],"import React, { useRef } from \"react\";\nimport { Switch } from \"../switch\";\n\nconst callAll =\n  (...fns) =>\n  (...args) =>\n    fns.forEach((fn) => fn?.(...args));\n\nconst actionTypes = {\n  toggle: \"toggle\",\n  reset: \"reset\",\n};\n\nfunction toggleReducer(state, { type, initialState }) {\n  switch (type) {\n    case actionTypes.toggle: {\n      return { on: !state.on };\n    }\n    case actionTypes.reset: {\n      return initialState;\n    }\n    default: {\n      throw new Error(`Unsupported type: ${type}`);\n    }\n  }\n}\n\nfunction useToggle({\n  initialOn = false,\n  reducer = toggleReducer,\n  onChange,\n  on: controlledOn,\n} = {}) {\n  const { current: initialState } = React.useRef({ on: initialOn });\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const onIsControlled = controlledOn != null;\n  const on = onIsControlled ? controlledOn : state.on;\n\n  function dispatchWithOnChange(action) {\n    if (!onIsControlled) {\n      dispatch(action);\n    }\n    onChange?.(reducer({ ...state, on }, action), action);\n  }\n\n  const toggle = () => dispatchWithOnChange({ type: actionTypes.toggle });\n  const reset = () =>\n    dispatchWithOnChange({ type: actionTypes.reset, initialState });\n\n  function getTogglerProps({ onClick, ...props } = {}) {\n    return {\n      \"aria-pressed\": on,\n      onClick: callAll(onClick, toggle),\n      ...props,\n    };\n  }\n\n  function getResetterProps({ onClick, ...props } = {}) {\n    return {\n      onClick: callAll(onClick, reset),\n      ...props,\n    };\n  }\n\n  return {\n    on,\n    reset,\n    toggle,\n    getTogglerProps,\n    getResetterProps,\n  };\n}\n\nfunction Toggle({ on: controlledOn, onChange }) {\n  const { on, getTogglerProps } = useToggle({ on: controlledOn, onChange });\n  const props = getTogglerProps({ on });\n  return <Switch {...props} />;\n}\n\nfunction App() {\n  const [bothOn, setBothOn] = React.useState(false);\n  const [timesClicked, setTimesClicked] = React.useState(0);\n\n  function handleToggleChange(state, action) {\n    if (action.type === actionTypes.toggle && timesClicked > 4) {\n      return;\n    }\n    setBothOn(state.on);\n    setTimesClicked((c) => c + 1);\n  }\n\n  function handleResetClick() {\n    setBothOn(false);\n    setTimesClicked(0);\n  }\n\n  return (\n    <div>\n      <div>\n        <Toggle on={bothOn} onChange={handleToggleChange} />\n        <Toggle on={bothOn} onChange={handleToggleChange} />\n      </div>\n      {timesClicked > 4 ? (\n        <div data-testid=\"notice\">\n          Whoa, you clicked too much!\n          <br />\n        </div>\n      ) : (\n        <div data-testid=\"click-count\">Click count: {timesClicked}</div>\n      )}\n      <button onClick={handleResetClick}>Reset</button>\n      <hr />\n      <div>\n        <div>Uncontrolled Toggle:</div>\n        <Toggle\n          onChange={(...args) =>\n            console.info(\"Uncontrolled Toggle onChange\", ...args)\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n// we're adding the Toggle export for tests\nexport { Toggle };\n\n/*\neslint\n  no-unused-expressions: \"off\",\n*/\n\nfunction MyCapitalizedInput() {\n  const inputRef = useRef();\n  const handleSubmit = (event) => {\n    alert(\"A name was submitted: \" + this.input.current.value);\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input type=\"text\" ref={inputRef} />\n      </label>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/RenderProps/index.js",["81"],"import { Popover } from \"antd\";\nimport data from \"./data\";\n\nfunction ListWithMore({ renderItem, data = [], max }) {\n  const elements = data.map((item, index) => renderItem(item, index, data));\n  const show = elements.slice(0, max);\n  const hide = elements.slice(max);\n  return (\n    <span className=\"exp-10-list-with-more\">\n      {show}\n      {hide.length > 0 && (\n        <Popover content={<div style={{ maxWidth: 500 }}>{hide}</div>}>\n          <span className=\"more-items-wrapper\">\n            and{\" \"}\n            <span className=\"more-items-trigger\"> {hide.length} more...</span>\n          </span>\n        </Popover>\n      )}\n    </span>\n  );\n}\n\nexport default () => {\n  return (\n    <div className=\"exp-10-list-with-more\">\n      <h1>User Names</h1>\n      <div className=\"user-names\">\n        Liked by:{\" \"}\n        <ListWithMore\n          renderItem={(user) => {\n            return <span className=\"user-name\">{user.name}</span>;\n          }}\n          data={data}\n          max={3}\n        />\n      </div>\n      <br />\n      <br />\n      <h1>User List</h1>\n      <div className=\"user-list\">\n        <div className=\"user-list-row user-list-row-head\">\n          <span className=\"user-name-cell\">Name</span>\n          <span>City</span>\n          <span>Job Title</span>\n        </div>\n        <ListWithMore\n          renderItem={(user) => {\n            return (\n              <div className=\"user-list-row\">\n                <span className=\"user-name-cell\">{user.name}</span>\n                <span>{user.city}</span>\n                <span>{user.job}</span>\n              </div>\n            );\n          }}\n          data={data}\n          max={5}\n        />\n      </div>\n    </div>\n  );\n};\n","/Users/chenxiaoyao/Desktop/demo/js-rocks/demos/react/src/patterns/RenderProps/data.js",["82"],"export default [\n  {\n    id: \"1\",\n    name: \"Kennedy\",\n    job: \"Chief Mobility Orchestrator\",\n    city: \"North Alec\",\n  },\n  {\n    id: \"2\",\n    name: \"Lucius\",\n    job: \"Internal Research Manager\",\n    city: \"Littleland\",\n  },\n  {\n    id: \"3\",\n    name: \"Carlos\",\n    job: \"Lead Configuration Analyst\",\n    city: \"South Lillian\",\n  },\n  {\n    id: \"4\",\n    name: \"Urban\",\n    job: \"Chief Operations Agent\",\n    city: \"Shieldshaven\",\n  },\n  {\n    id: \"5\",\n    name: \"Katrine\",\n    job: \"Legacy Solutions Orchestrator\",\n    city: \"South Kyleigh\",\n  },\n  {\n    id: \"6\",\n    name: \"Kennedi\",\n    job: \"Global Assurance Developer\",\n    city: \"East Jaunitaville\",\n  },\n  {\n    id: \"7\",\n    name: \"Mariah\",\n    job: \"Forward Functionality Administrator\",\n    city: \"West Kody\",\n  },\n  {\n    id: \"8\",\n    name: \"Danika\",\n    job: \"Forward Applications Developer\",\n    city: \"Lake Max\",\n  },\n  {\n    id: \"9\",\n    name: \"Freeda\",\n    job: \"Legacy Tactics Officer\",\n    city: \"North Brandonview\",\n  },\n  {\n    id: \"10\",\n    name: \"Lila\",\n    job: \"Future Research Coordinator\",\n    city: \"South Helenabury\",\n  },\n];\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":9,"column":8,"nodeType":"89","messageId":"90","endLine":9,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":22,"column":10,"nodeType":"89","messageId":"90","endLine":22,"endColumn":15},{"ruleId":"87","severity":1,"message":"92","line":22,"column":17,"nodeType":"89","messageId":"90","endLine":22,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":61,"column":22,"nodeType":"95","messageId":"96","endLine":61,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":129,"column":6,"nodeType":"99","endLine":129,"endColumn":15,"suggestions":"100"},{"ruleId":"87","severity":1,"message":"101","line":148,"column":30,"nodeType":"89","messageId":"90","endLine":148,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":254,"column":19,"nodeType":"104","endLine":262,"endColumn":20},{"ruleId":"97","severity":1,"message":"105","line":25,"column":6,"nodeType":"99","endLine":25,"endColumn":8,"suggestions":"106"},{"ruleId":"87","severity":1,"message":"107","line":57,"column":10,"nodeType":"89","messageId":"90","endLine":57,"endColumn":28},{"ruleId":"87","severity":1,"message":"107","line":134,"column":10,"nodeType":"89","messageId":"90","endLine":134,"endColumn":28},{"ruleId":"108","severity":1,"message":"109","line":23,"column":1,"nodeType":"110","endLine":62,"endColumn":3},{"ruleId":"108","severity":1,"message":"111","line":1,"column":1,"nodeType":"110","endLine":62,"endColumn":3},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'BarrelLayout' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'triggerSearch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'cancel' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'updateVisibleData'. Either include it or remove the dependency array.",["115"],"'MyCapitalizedInput' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [triggerSearch, visible]",{"range":"120","text":"121"},"Update the dependencies array to be: [updateVisibleData]",{"range":"122","text":"123"},[3632,3641],"[triggerSearch, visible]",[912,914],"[updateVisibleData]"]